challenges:
- assignment: "# Install vdo\n\n```\nyum install -y vdo-6.2.4.14-14.el8 kmod-kvdo-6.2.4.26-77.el8\n\
    ```\n\nVDO provides block level, inline data reduction for Linux in the form of\
    \ deduplication,\ncompression, and thin provisioning.  \n\nVDO is currently delivered\
    \ as two packages: \n* kmod-kvdo (kernel modules),\n* vdo (user-space utilities).\
    \  \n\nVDO can be used for local or cloud storage.  VDO can benefit Filesystems,\n\
    Ceph, hypervisors, and container environments.  \n\nVDO is comprised of:\n\nTwo\
    \ Kernel modules\n* kvdo     - manages block storage and compression,\n* uds \
    \     - manages the deduplication index.  \n    \nUser space utilities\n* vdo\
    \      - vdo manager used to create, remove or modify volumes,\n* vdostats - view\
    \ volume statistics.\n\nDetailed information on VDO can be found in the man page.\n\
    \n`man vdo`\n\nAlso, each of the statistics for vdostats can be found in the man\
    \ page.\n\n`man vdostats`\n\n"
  difficulty: basic
  notes:
  - contents: "# Goal:\n\n\nAfter completing this scenario, users will be able to\
      \ configure VDO to make\n\nuse of block level deduplication, compression, thin-provisioning\
      \ to save space.\n\n\n# Concepts included in this scenario:\n\n* Install VDO\n\
      \n* Create a VDO volume for an XFS filesystem\n\n* Create and write duplicate\
      \ files to VDO \n\n* View VDO statistics to see the data efficiency \n\n\n#\
      \ Example Use Case:\n\n\nTo reduce the amount of operational and storage costs\
      \ in data centers, \n\nwe use the deduplication and compression features in\
      \ VDO to decrease \n\nthe footprint of data.\n"
    type: text
  slug: step1
  tabs:
  - hostname: rhel
    title: CLI
    type: terminal
  - hostname: rhel
    path: /
    port: 30001
    title: Web Console
    type: service
  timelimit: 42
  title: Step 1
  type: challenge
- assignment: "A free block device is required to create the VDO volume.  We can use\
    \ a \ntemporary loopback device for this scenario.  The data for our backing \n\
    device will exist as a file in /tmp.\n\nThe truncate command can be used to create\
    \ the file.\n\n\n```\ntruncate -s 10g /tmp/vdo.trunc\n```\n\nNow, the vdo.trunc\
    \ file will be used to create the loopback\ndevice.  losetup is used to associate\
    \ a loop device with a file.\n\n\n```\nlosetup  /dev/loop1 /tmp/vdo.trunc\n```\n\
    \nView the loopback device using lsblk.\n\n```\nlsblk\n```\n\n<pre class=\"file\"\
    >\nNAME          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nloop1           7:1    0\
    \   10G  0 loop\nsr0            11:0    1 1024M  0 rom\nvda           252:0  \
    \  0 39.1G  0 disk\n\u251C\u2500vda1        252:1    0    1G  0 part /boot\n\u2514\
    \u2500vda2        252:2    0 38.1G  0 part\n  \u251C\u2500rhel-root 253:0    0\
    \ 34.2G  0 lvm  /\n  \u2514\u2500rhel-swap 253:1    0  3.9G  0 lvm  [SWAP]\n</pre>\n\
    \nThe device named loop1 is first in the list and has a size of 10G.\n\n"
  difficulty: basic
  slug: step2
  tabs:
  - hostname: rhel
    title: CLI
    type: terminal
  - hostname: rhel
    path: /
    port: 30001
    title: Web Console
    type: service
  timelimit: 42
  title: Step 2
  type: challenge
- assignment: "Create the VDO volume.  \n\nVDO uses thin-provisioning to help achieve\
    \ space \nsavings. VDO is able to present a device to the\nfilesystem that is\
    \ larger than the physical size, since \ndeduplication maps multiple (duplicate)\
    \ logical blocks\nto the same physical block.\n\nIn this example we will set the\
    \ VDO volume to be\n10X the size of /dev/loop1, or 100GB.\n\n\n```\nvdo create\
    \ --name=vdo1 --device=/dev/loop1 --vdoLogicalSize=100G\n```\n\n<pre class=\"\
    file\">\nCreating VDO vdo1\nStarting VDO vdo1\nStarting compression on VDO vdo1\n\
    VDO instance 1 volume is ready at /dev/mapper/vdo1\n</pre>\n\nVDO volume has been\
    \ created at /dev/mapper/vdo1. View the volume\nusing vdostats --human-readable\n\
    \  \n\n```\nvdostats --human-readable\n```\n\n<pre class=\u201Dfile\u201D>\nDevice\
    \                    Size      Used Available Use% Space saving%\n/dev/mapper/vdo1\
    \         10.0G      4.0G      6.0G  40%            0%\n</pre>\n\nThe volume has\
    \ 0% space savings and there is 4G used, which is\nreserved space for metadata.\
    \  \n"
  difficulty: basic
  slug: step3
  tabs:
  - hostname: rhel
    title: CLI
    type: terminal
  - hostname: rhel
    path: /
    port: 30001
    title: Web Console
    type: service
  timelimit: 42
  title: Step 3
  type: challenge
- assignment: "The VDO volume will need to be formatted with XFS to demonstrate \n\
    space savings in this setup.\n\n```\nmkfs.xfs -K /dev/mapper/vdo1\n```\n\n\"-K\"\
    \ options tells mkfs to not send discards to VDO\nduring the format.\n\nCreate\
    \ a directory to mount our new filesystem.\n\n\n```\nmkdir /data\n```\n\nMount\
    \ the file system. \n\n```\nmount -o discard /dev/mapper/vdo1 /data\n```\n\n\"\
    -o discard\" option lets the filesystem know to send\ndiscards to the thin-provisioned\
    \ layer when a file is\ndeleted.  Discards are required to accurately report\n\
    space savings.\n\n"
  difficulty: basic
  slug: step4
  tabs:
  - hostname: rhel
    title: CLI
    type: terminal
  - hostname: rhel
    path: /
    port: 30001
    title: Web Console
    type: service
  timelimit: 42
  title: Step 4
  type: challenge
- assignment: "Change directories to /data and start using\nthe filesystem\n\n```\n\
    cd /data\n```\n\nTo show the power of deduplication and how it can reduce storage\
    \ costs \nin your data center,  we will create a file of random data, then make\
    \ \nseveral copies of it.               \n\nThis dd command will generate a unique\
    \ 1GB file.\n\n```\ndd if=/dev/urandom of=/data/file.1 bs=1M count=1000\n```\n\
    \nWhen the file completes, we can check the output of          \nVDO stats.\n\n\
    ```\nvdostats --human-readable\n```\n\n<pre class=\"file\">\nDevice          \
    \          Size      Used Available Use% Space saving%\n/dev/mapper/vdo1     \
    \    10.0G      5.0G      5.0G  49%            4%\n</pre>\n\nNote: Writing the\
    \ random data increased the \"Used\" value by nearly the amount\n      written.\
    \ Because the data was random there was little or no opportunity\n      for deduplication,\
    \ and the space saving was small.\n"
  difficulty: basic
  slug: step5
  tabs:
  - hostname: rhel
    title: CLI
    type: terminal
  - hostname: rhel
    path: /
    port: 30001
    title: Web Console
    type: service
  timelimit: 42
  title: Step 5
  type: challenge
- assignment: "We can see that the Used went up from 4.0G to 5.0G\nand the Space saving\
    \ is 4%.\n\nThe output of df shows 1.8G being used. 1G is from the new file\n\
    that was just created and the 800M is from the filesystem's\nmetadata.\n\n\n```\n\
    df -h|grep vdo\n```\n\n<pre class=\"file\">\n/dev/mapper/vdo1       100G  1.8G\
    \   99G   2% /data\n</pre>\n\nMake 4 copies of the file to demonstrate having\
    \ duplicate data \nin the filesystem.\n\n```\nfor i in 2 3 4 5; do echo \"copy\
    \ $i\";cp file.1 file.$i; done\n```\n"
  difficulty: basic
  slug: step6
  tabs:
  - hostname: rhel
    title: CLI
    type: terminal
  - hostname: rhel
    path: /
    port: 30001
    title: Web Console
    type: service
  timelimit: 42
  title: Step 6
  type: challenge
- assignment: "Run the sync command to flush any data in the file system\u2019s page\
    \ cache \nto VDO.\n\n\n```\nsync\n```\n\nReview the output of df -h and vdostats\
    \ to see the space savings.          \n\n```\ndf -h /dev/mapper/vdo1\n```\n\n\
    <pre class=\"file\">\n/dev/mapper/vdo1       100G  5.7G   95G   6% /data\n</pre>\n\
    \nWe can see that df is reporting 5.7G used from the 5, 1G files created.\n\n\
    Now to look at the output of vdostats.\n\n\n```\nvdostats --human-readable\n```\n\
    \n<pre class=\"file\">\nDevice                    Size      Used Available Use%\
    \ Space saving%\n/dev/mapper/vdo1         10.0G      5.0G      5.0G  49%     \
    \      80%\n</pre>\n\nThe Used amount hasn\u2019t changed since the creation of\
    \ the first file.\nThe space savings is now reporting 80%!  \n"
  difficulty: basic
  slug: step7
  tabs:
  - hostname: rhel
    title: CLI
    type: terminal
  - hostname: rhel
    path: /
    port: 30001
    title: Web Console
    type: service
  timelimit: 42
  title: Step 7
  type: challenge
description: "# Goal:\n\n\nAfter completing this scenario, users will be able to configure\
  \ VDO to make\n\nuse of block level deduplication, compression, thin-provisioning\
  \ to save space.\n\n\n# Concepts included in this scenario:\n\n* Install VDO\n\n\
  * Create a VDO volume for an XFS filesystem\n\n* Create and write duplicate files\
  \ to VDO \n\n* View VDO statistics to see the data efficiency \n\n\n# Example Use\
  \ Case:\n\n\nTo reduce the amount of operational and storage costs in data centers,\
  \ \n\nwe use the deduplication and compression features in VDO to decrease \n\n\
  the footprint of data.\n"
developers:
- dopinto@redhat.com
icon: https://logodix.com/logo/1910931.png
level: beginner
owner: rhel
private: false
published: true
skipping_enabled: false
slug: vdo-configure2
tags:
- rhel
title: Reducing Operational and Storage Costs with Virtual Data Optimizer (VDO)
type: track
