challenges:
- assignment: "# Installing the SCAP packages\n\n**SCAP** (Security Content Automation\
    \ Protocol) is a NIST project that standardizes the language for describing assessment\
    \ criteria and findings. **OpenSCAP**, available in RHEL, is a SCAP based compliance\
    \ toolkit that includes policies and tools that allows you to scan and evaluate\
    \ host machines. \n\n__Note:__ There are 3 tabs that will be used in this lab\
    \ - a terminal tab for running the scanner (indicated by *Terminal*), a second\
    \ terminal tab for remediating an issue that is found (indicated by *Terminal\
    \ Remediation*), and a browser tab for viewing the OpenSCAP report (indicated\
    \ by *OpenSCAP Report*).\n\nPrior to getting started, we will install the package\
    \ that consists of the command line interface of the OpenSCAP scanner (*oscap*).\
    \ OpenSCAP also has a graphical tool called *SCAP workbench*, but in this lab,\
    \ we will only be using the command line interface. We will also install the SCAP\
    \ Security guide, which implements security guidance rules and remediation scripts\
    \ by respective authorities, namely PCI DSS, STIG, etc. In this lab, we will scan\
    \ the system against the PCI DSS profile. \n\nEnsure that apache server, OpenSCAP\
    \ scanner and definitions are installed with the command below; it\u2019s safe\
    \ to run even if the packages already exist. OpenSCAP is not dependant on apache\
    \ server, however it is needed in this lab for the purposes of viewing the HTML\
    \ report generated by OpenSCAP.\n\n`yum install -y httpd openscap-scanner scap-security-guide`{{execute\
    \ T1}}\n\nAfter installing, all SCAP Security Guide security policies are in the\
    \ */usr/share/xml/scap/ssg/content/* directory. \n\n`ls /usr/share/xml/scap/ssg/content`{{execute\
    \ T1}}\n\nThere are files for every platform available in a form of XCCDF, OVAL\
    \ or datastream documents. In most of use cases, you want to use the datastreams,\
    \ which filenames end with *-ds.xml*. SCAP datastreams represent a bundle of profiles\
    \ which are used to define a compliance policy.\n\nIf you are interested in more\
    \ details about the *openscap* tool check out -\n\n`man oscap`{{execute T1}}\n"
  difficulty: basic
  notes:
  - contents: "After completing this scenario, you will be able to run tools based\
      \ on the Security Content Automation Protocol (SCAP) standard for compliance\
      \ and vulnerability scanning\n\n# Concepts included in this scenario:\n* Download\
      \ the packages necessary for OpenSCAP and the SCAP security guide\n* Explore\
      \ the scanning profiles available to use\n* Run the scan and generate an HTML\
      \ report\n* Remediate an issue found during the scan \n* Re-run the scan to\
      \ ensure the issue is remediated\n\n# Example Usecase:\nThe Chief Security Officer\
      \ (CSO) of your organization has requested that a compliance scan be conducted\
      \ to meet the PCI-DSS requirements. \n"
    type: text
  slug: step1
  tabs:
  - hostname: rhel
    title: Terminal
    type: terminal
  - hostname: rhel
    path: /
    port: 9090
    title: RHEL Web Console
    type: service
  - hostname: rhel
    path: /root
    title: Visual Editor
    type: code
  timelimit: 150
  title: Step 1
  type: challenge
- assignment: "# Displaying available profiles \n\nYou can display all available profiles\
    \ in the datastream file using the *openscap info* command. For this lab, you\
    \ will be using the RHEL8 datastream file. \n\n`oscap info /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml`{{execute\
    \ T1}}\n\nThe output has several profiles including PCI-DSS, [DRAFT] DISA STIG,\
    \ and ACSC Essential Eight. \n\n<pre class=\"file\">\n<< OUTPUT ABRIDGED >>\n\
    \                Profiles:\n                        Title: Protection Profile\
    \ for General Purpose Operating Systems\n                                Id: xccdf_org.ssgproject.content_profile_ospp\n\
    \                        Title: PCI-DSS v3.2.1 Control Baseline for Red Hat EnterpriseLinux\
    \ 8\n                                Id: xccdf_org.ssgproject.content_profile_pci-dss\n\
    \                        Title: [DRAFT] DISA STIG for Red Hat Enterprise Linux\
    \ 8\n                                Id: xccdf_org.ssgproject.content_profile_stig\n\
    \                        Title: Australian Cyber Security Centre (ACSC) Essential\
    \ Eight\n                                Id: xccdf_org.ssgproject.content_profile_e8\n\
    \                Referenced check files:\n                        ssg-rhel8-oval.xml\n\
    \                                system: http://oval.mitre.org/XMLSchema/oval-definitions-5\n\
    \                        ssg-rhel8-ocil.xml\n                                system:\
    \ http://scap.nist.gov/schema/ocil/2\n                        security-data-oval-com.redhat.rhsa-RHEL8.xml\n\
    \                                system: http://oval.mitre.org/XMLSchema/oval-definitions-5\n\
    << OUTPUT ABRIDGED >>\n</pre>\n\n>__NOTE:__ Each profile in the output has a title\
    \ which describes the profile and corresponding Id. For this lab, we are interested\
    \ in the PCI-DSS profile, and the corresponding Id is *xccdf_org.ssgproject.content_profile_pci-dss*.\
    \ \n\nA profile contains generic security recommendations that apply to all Red\
    \ Hat Enterprise Linux installations and additional security recommendations that\
    \ are specific to the intended usage of a system. To obtain information about\
    \ a specific profile, specify the profile Id using the *--profile* option.\n\n\
    `oscap info --profile xccdf_org.ssgproject.content_profile_pci-dss /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml`{{execute\
    \ T1}}\n\n<pre class=\"file\">\nDocument type: Source Data Stream\nImported: 2020-02-11T08:41:17\n\
    \nStream: scap_org.open-scap_datastream_from_xccdf_ssg-rhel8-xccdf-1.2.xml\nGenerated:\
    \ (null)\nVersion: 1.3\nWARNING: Datastream component 'scap_org.open-scap_cref_security-data-oval-com.redhat.rhsa-RHEL8.xml'\
    \ points out to the remote 'https://www.redhat.com/security/data/oval/com.redhat.rhsa-RHEL8.xml'.\
    \ Use '--fetch-remote-resources' option to download it.\nWARNING: Skipping 'https://www.redhat.com/security/data/oval/com.redhat.rhsa-RHEL8.xml'\
    \ file which is referenced from datastream\nProfile\n        Title: PCI-DSS v3.2.1\
    \ Control Baseline for Red Hat Enterprise Linux 8\n        Id: xccdf_org.ssgproject.content_profile_pci-dss\n\
    \n        Description: Ensures PCI-DSS v3.2.1 security configuration settings\
    \ are applied.\n</pre>\n\n>__Note:__ The datastream file makes references to remote\
    \ OVAL content that is regularly updated. During scanning, OpenSCAP attempts to\
    \ download the resources locally if *--fetch-remote-resources* option is provided.\n\
    \n"
  difficulty: basic
  slug: step2
  tabs:
  - hostname: rhel
    title: Terminal
    type: terminal
  - hostname: rhel
    path: /
    port: 9090
    title: RHEL Web Console
    type: service
  - hostname: rhel
    path: /root
    title: Visual Editor
    type: code
  timelimit: 150
  title: Step 2
  type: challenge
- assignment: "# Scan and generate a report\n\nA XCCDF document is a structured collection\
    \ of security configuration rules for some set of target system. In this case,\
    \ it has the \nconfiguration rules that meet the PCI regulation.\n\nTo start scanning\
    \ using OpenSCAP, use the *oscap xccdf eval* command with the profile Id, option\
    \ to fetch remote resources, output XML results file, and \nthe datastream file.\n\
    \n`oscap xccdf eval --fetch-remote-resources --profile xccdf_org.ssgproject.content_profile_pci-dss\
    \ --results /tmp/scan-xccdf-results.xml /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml`{{execute\
    \ T1}}\n\n__Note:__ This scan can take a few minutes to complete as it has to\
    \ evaluate all the rules, and generate a XML file that has the results.\n\nOnce\
    \ the scan completes, you can look at the pass/fail status of each rule in the\
    \ output -\n\n<pre class=\"file\">\nDownloading: https://www.redhat.com/security/data/oval/com.redhat.rhsa-RHEL8.xml\
    \ ... ok\nTitle   Enable auditd Service\nRule    xccdf_org.ssgproject.content_rule_service_auditd_enabled\n\
    Ident   CCE-80872-5\nResult  pass\n\nTitle   Enable Auditing for Processes Which\
    \ Start Prior to the Audit Daemon\nRule    xccdf_org.ssgproject.content_rule_grub2_audit_argument\n\
    Ident   CCE-80825-3\nResult  pass\n\nTitle   Configure auditd mail_acct Action\
    \ on Low Disk Space\nRule    xccdf_org.ssgproject.content_rule_auditd_data_retention_action_mail_acct\n\
    Ident   CCE-80678-6\nResult  pass\n\nTitle   Configure auditd admin_space_left\
    \ Action on Low Disk Space\nRule    xccdf_org.ssgproject.content_rule_auditd_data_retention_admin_space_left_action\n\
    Ident   CCE-80679-4\nResult  pass\n\nTitle   Configure auditd Number of Logs Retained\n\
    Rule    xccdf_org.ssgproject.content_rule_auditd_data_retention_num_logs\nIdent\
    \   CCE-80683-6\nResult  pass\n\nTitle   Configure auditd max_log_file_action\
    \ Upon Reaching Maximum Log Size\nRule    xccdf_org.ssgproject.content_rule_auditd_data_retention_max_log_file_action\n\
    Ident   CCE-80682-8\nResult  pass\n\nTitle   Configure auditd space_left Action\
    \ on Low Disk Space\nRule    xccdf_org.ssgproject.content_rule_auditd_data_retention_space_left_action\n\
    Ident   CCE-80684-4\nResult  pass\n\nTitle   Configure auditd Max Log File Size\n\
    Rule    xccdf_org.ssgproject.content_rule_auditd_data_retention_max_log_file\n\
    Ident   CCE-80681-0\nResult  pass\n\n<< OUTPUT ABRIDGED >>\n</pre>\n\n\nThe XML\
    \ results file can be transformed into HTML or plain-text format for easier readability\
    \ - \n\n`oscap xccdf generate report /tmp/scan-xccdf-results.xml > /var/www/html/index.html`{{execute\
    \ T1}} \n\nNow that the HTML report is generated, you can check the *OpenSCAP\
    \ Report* tab of this lab interface to view the results.\n\n![OpenSCAP-Report](./assets/Openscan-Report-Fail.png)\n\
    \nIn the report, you will notice that several rules have failed. If you scroll\
    \ to the bottom of the HTML report, you will find a failed rule related to *IPSec\
    \ Support*. If you click the failed rule, you can get more details including the\
    \ Rule ID, severity and description. \n\n![OpenSCAP-Report-Details](./assets/Openscan-Report-Fail-Details.png)\n\
    \nTake a note of the Rule ID for this failed rule as it will be used in the next\
    \ step. \n\n"
  difficulty: basic
  slug: step3
  tabs:
  - hostname: rhel
    title: Terminal
    type: terminal
  - hostname: rhel
    path: /
    port: 9090
    title: RHEL Web Console
    type: service
  - hostname: rhel
    path: /root
    title: Visual Editor
    type: code
  timelimit: 150
  title: Step 3
  type: challenge
- assignment: "# Remediating and rescanning against a profile\n\nOne of the many failed\
    \ rules in the scan previously done was related to IPSec support. In this step,\
    \ you will remediate a single failed rule related to IPSec support.\n\n__NOTE__:\
    \ Many of the remediations involve restarting the host, and the current demo environment\
    \ does not support host reboots yet. Thus, this lab will \nfocus only on remediating\
    \ a single issue. \n\nOn *Terminal 2* of the lab interface, re-scan the host passing\
    \ the *--remediation* option to carry out an online remediation. Additionally,\
    \ provide\nthe Rule ID from the previous step (*xccdf_org.ssgproject.content_rule_package_libreswan_installed*)\
    \ to remediate the specific rule. If no\nRule ID is provided, oscap attempts to\
    \ remediate all the failed rules.\n\n`oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_pci-dss\
    \ --remediate --fetch-remote-resources --results scan-xccdf-results.xml --rule\
    \ xccdf_org.ssgproject.content_rule_package_libreswan_installed /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml`{{execute\
    \ T2}}\n\n<pre class=\"file\">\nTitle   Install libreswan Package\nRule    xccdf_org.ssgproject.content_rule_package_libreswan_installed\n\
    Ident   CCE-80845-1\nResult  fail\n\n --- Starting Remediation ---\nTitle   Install\
    \ libreswan Package\nRule    xccdf_org.ssgproject.content_rule_package_libreswan_installed\n\
    Ident   CCE-80845-1\nResult  fixed\n</pre>\n\nTo verify that the issue is remediated,\
    \ re-run the previous command. Oscap only attempts to fix what is broken, so it\
    \ will not remediate an already fixed rule. \n\n`oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_pci-dss\
    \ --remediate --fetch-remote-resources --results scan-xccdf-results.xml --rule\
    \ xccdf_org.ssgproject.content_rule_package_libreswan_installed /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml`{{execute\
    \ T2}}\n\n<pre class=\"file\">\nTitle   Install libreswan Package\nRule    xccdf_org.ssgproject.content_rule_package_libreswan_installed\n\
    Ident   CCE-80845-1\nResult  pass\n\n --- Starting Remediation ---\n</pre>\n\n\
    The remediation starts but there is no work left to be done.\n"
  difficulty: basic
  slug: step4
  tabs:
  - hostname: rhel
    title: Terminal
    type: terminal
  - hostname: rhel
    path: /
    port: 9090
    title: RHEL Web Console
    type: service
  - hostname: rhel
    path: /root
    title: Visual Editor
    type: code
  timelimit: 150
  title: Step 4
  type: challenge
description: "After completing this scenario, you will be able to run tools based\
  \ on the Security Content Automation Protocol (SCAP) standard for compliance and\
  \ vulnerability scanning\n\n# Concepts included in this scenario:\n* Download the\
  \ packages necessary for OpenSCAP and the SCAP security guide\n* Explore the scanning\
  \ profiles available to use\n* Run the scan and generate an HTML report\n* Remediate\
  \ an issue found during the scan \n* Re-run the scan to ensure the issue is remediated\n\
  \n# Example Usecase:\nThe Chief Security Officer (CSO) of your organization has\
  \ requested that a compliance scan be conducted to meet the PCI-DSS requirements.\
  \ \n"
developers:
- rhel-tmm@redhat.com
icon: https://storage.googleapis.com/instruqt-frontend/img/tracks/default.png
level: beginner
owner: rhel
private: false
published: true
skipping_enabled: false
slug: openscap
tags:
- rhel
title: Using OpenSCAP for security compliance and vulnerability scanning
type: track
