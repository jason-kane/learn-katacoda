challenges:
- assignment: "# Modify the FUTURE crypto policy\n\nThe Chief Security Officer sends\
    \ out the following e-mail -\n<pre class=\"file\">\nApplication and Infrastructure\
    \ Administrators,\n\nAfter my last e-mail recommending 3072 bit public keys, I\
    \ have received few \nconcerns that some applications would need additional time\
    \ for migration.\n\nTo continue supporting these applications running on our platform,\
    \ and \nto provide more time for these applications to upgrade, my recommendation\
    \ \nis to disallow TLS (1.0, and 1.1), and not allow SHA-1 hash usage.\n\n**NOTE**\
    \ We should still allow 2048 bit ciphers usage for a certain period of \ntime\
    \ until all applications can be upgraded to use 3072 bit keys.\n\n-CSO\n</pre>\n\
    \nIn order to comply with the requirements set forth by the CSO above, you will\
    \ \nupdate the system to modify the **FUTURE** policy to support shorter keys\
    \ \nof 2048 bit length. By default, the minimum key length in the **FUTURE** policy\
    \ is set to 3072-bit. \n\nYou will now check the currently active crypto policy\
    \ in effect on the system - \n\n`update-crypto-policies --show`{{execute T1}}\n\
    \nYou will now check the status of the Apache service -\n\n`systemctl status httpd.service\
    \ --no-pager`{{execute T1}}\n\nThe Apache service has failed to start. You can\
    \ also try restarting the Apache service - \n\n`systemctl restart httpd.service`{{execute\
    \ T1}}\n\nThe Apache service fails to restart. You can see a more specific error\
    \ \nmessage in the SSL error log for Apache. \n\n`tail -2 /var/log/httpd/ssl_error_log`{{execute\
    \ T1}}\n\n<pre class=\"file\">\n[Tue Jul 16 15:13:25.580860 2019 ] [ssl:emerg]\
    \ [pid 8869:tid 140233336588544] AH02562: Failed to configure certificate fe80::42:acff:fe11:b:443:0\
    \ (with chain), check /etc/pki/tls/certs/localhost.crt\n[Tue Jul 16 15:13:25.580860\
    \ 2019 ] [ssl:emerg] [pid 8869:tid 140233336588544] SSL Library Error: error:\
    \ 140AB18F: SSL routines: SSL_CTX_use_certificate:ee key too small\n</pre>\n\n\
    The error message indicates that the key length was too small which was expected\
    \ because \nthe **FUTURE** policy requires a minimum of 3072-bit keys.\n\nNow,\
    \ you will create a policy modifier module called **2048KEYS.pmod** that can be\
    \ used \nwith the FUTURE crypto policy. Policy modifiers are text files that include\
    \ policy instructions \nto the update-crypto-policies tool.  \n\nThe naming of\
    \ these files must follow the following convention : **_MODULE_.pmod**, where\
    \ **_MODULE_** \nis the name of the modifier in uppercase without spaces, and\
    \ .pmod is the file extension in lowercase. \n\nNext, you will create a policy\
    \ modifier called **2048KEYS.pmod** that will set the minimum key size to 2048\
    \ bits. \n\n`touch /etc/crypto-policies/policies/modules/2048KEYS.pmod`{{execute\
    \ T1}}\n\nIn the policy modifier file, you will specify the minimum key size of\
    \ RSA and DH keys - \n\n`echo \"min_dh_size = 2048\" > /etc/crypto-policies/policies/modules/2048KEYS.pmod`{{execute\
    \ T1}}\n\n`echo \"min_rsa_size = 2048\" >> /etc/crypto-policies/policies/modules/2048KEYS.pmod`{{execute\
    \ T1}}\n\nYou will now configure the system to use a modified **FUTURE** policy\
    \ with our newly created policy modifier -\n\n`update-crypto-policies --set FUTURE:2048KEYS`{{execute\
    \ T1}}\n\nIf you want to apply multiple policy modifiers, you can chain together\
    \ several policy modifiers separated using ':'.\nThe policy modifiers are evaluated\
    \ left to right to modify the specified named policy. \n\n<pre class=\"file\"\
    >\nSetting system policy to FUTURE:2048KEYS\nNote: System-wide crypto policies\
    \ are applied on application start-up.\nIt is recommended to restart the system\
    \ for the change to policies\nto fully take place.\n</pre>\n\nYou can now verify\
    \ that the new policy has been applied to the system.    \n\n`update-crypto-policies\
    \ --show`{{execute T1}}\n\n<pre class=\"file\">\nFUTURE:2048KEYS\n</pre>\n"
  difficulty: basic
  notes:
  - contents: "# Goal:\nAfter completing this scenario, you will be able to customize\
      \ Red Hat Enterprise \nLinux's system-wide cryptographic policies.  The scenario\
      \ uses the Apache web server \nas the example application.\n\n# Concepts included\
      \ in this scenario:\n* Verify the current system-wide cryptographic policy setting\n\
      * Make customizations to cryptography methods included in a policy\n* Restart\
      \ applications after applying a policy modifier to named policy\n* Verify that\
      \ the application settings comply with the modified cryptographic policies\n\
      \n# Example Use case:\nYour security team wants to start using FUTURE crypto\
      \ policy, but the applications still need time to catch up. Your team needs\
      \ to modify the FUTURE crypto policy to balance the needs of the security and\
      \ application teams.\n"
    type: text
  slug: step1
  tabs:
  - hostname: rhel
    title: Terminal
    type: terminal
  - hostname: rhel
    path: /
    port: 9090
    title: RHEL Web Console
    type: service
  timelimit: 150
  title: Step 1
  type: challenge
- assignment: "# Reconcile service issues\n\nYou will need to restart the Apache service\
    \ after changing the system-wide\ncrypto policy so that it runs under the new\
    \ policy.   \n\n> **NOTE:** Red Hat recommends rebooting the system for all services\
    \ to be\ninitialized with the new cryptographic policy, however, for this exercise\
    \ you\nwill be individually working with the Apache web service.\n\n`systemctl\
    \ restart httpd.service`{{execute T1}}\n\nVerify that Apache is running on the\
    \ machine.\n\n`systemctl status httpd.service --no-pager`{{execute T1}}\n\n<pre\
    \ class=\"file\">\n<< OUTPUT ABRIDGED >>\n\nActive: active (running) since Monday\
    \ 2019-07-15 19:24:18 EDT; 3h 59min left\n\n<< OUTPUT ABRIDGED >>\n</pre>\n\n\
    Now that the service is running and certificates used comply with the modified\
    \ **FUTURE** policy \nthat supports shorter key lengths, connect to the Apache\
    \ service and validate the bit length of \nthe certificate is being offered to\
    \ client browsers.   \n\n`openssl s_client -connect localhost:443 </dev/null 2>/dev/null\
    \ | grep '^Server public key'`{{execute T1}}\n\n<pre class=\"file\">\nServer public\
    \ key is 2048 bit\n</pre>\n\nYou have now configured RHEL to enforce a modified\
    \ **FUTURE** crypto policy that can support 2048-bit or higher \nciphers. Due\
    \ to this setup, Apache server can continue to run using a 2048-bit server key.\n"
  difficulty: basic
  slug: step2
  tabs:
  - hostname: rhel
    title: Terminal
    type: terminal
  - hostname: rhel
    path: /
    port: 9090
    title: RHEL Web Console
    type: service
  timelimit: 150
  title: Step 2
  type: challenge
description: "# Goal:\nAfter completing this scenario, you will be able to customize\
  \ Red Hat Enterprise \nLinux's system-wide cryptographic policies.  The scenario\
  \ uses the Apache web server \nas the example application.\n\n# Concepts included\
  \ in this scenario:\n* Verify the current system-wide cryptographic policy setting\n\
  * Make customizations to cryptography methods included in a policy\n* Restart applications\
  \ after applying a policy modifier to named policy\n* Verify that the application\
  \ settings comply with the modified cryptographic policies\n\n# Example Use case:\n\
  Your security team wants to start using FUTURE crypto policy, but the applications\
  \ still need time to catch up. Your team needs to modify the FUTURE crypto policy\
  \ to balance the needs of the security and application teams.\n"
developers:
- dopinto@redhat.com
icon: https://logodix.com/logo/1910931.png
level: beginner
owner: rhel
private: false
published: true
skipping_enabled: false
slug: customize-crypto-policy
tags:
- rhel
title: Customize the system-wide cryptographic policy
type: track
